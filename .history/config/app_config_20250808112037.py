"""
File c·∫•u h√¨nh ch√≠nh cho to√†n b·ªô ·ª©ng d·ª•ng
"""
import os
from dotenv import load_dotenv

# Load environment variables
load_dotenv()

# Import c√°c config classes
from .mathpix_config import mathpix_config
from .vertex_ai_config import vertex_ai_config

class AppConfig:
    """C·∫•u h√¨nh t·ªïng cho ·ª©ng d·ª•ng"""
    
    def __init__(self):
        self.mathpix = mathpix_config
        self.vertex_ai = vertex_ai_config
        
        # C·∫•u h√¨nh paths
        self.project_root = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
        self.data_folder = os.path.join(self.project_root, "data")
        self.input_folder = os.path.join(self.data_folder, "input")
        self.output_folder = os.path.join(self.data_folder, "output")
        
        # T·∫°o th∆∞ m·ª•c n·∫øu ch∆∞a c√≥
        self._create_directories()
    
    def _create_directories(self):
        """T·∫°o c√°c th∆∞ m·ª•c c·∫ßn thi·∫øt"""
        directories = [
            self.data_folder,
            self.input_folder,
            self.output_folder
        ]
        
        for directory in directories:
            os.makedirs(directory, exist_ok=True)
    
    def check_all_configs(self):
        """Ki·ªÉm tra t·∫•t c·∫£ c√°c c·∫•u h√¨nh"""
        status = {
            "mathpix": self.mathpix.is_configured(),
            "vertex_ai": self.vertex_ai.is_configured(),
            "directories": os.path.exists(self.data_folder)
        }
        
        return status
    
    def get_config_summary(self):
        """Tr·∫£ v·ªÅ t√≥m t·∫Øt c·∫•u h√¨nh"""
        status = self.check_all_configs()
        
        print("=== T√åNH TR·∫†NG C·∫§U H√åNH ===")
        print(f"üìã Mathpix API: {'‚úÖ OK' if status['mathpix'] else '‚ùå Ch∆∞a c·∫•u h√¨nh'}")
        print(f"ü§ñ Vertex AI: {'‚úÖ OK' if status['vertex_ai'] else '‚ùå Ch∆∞a c·∫•u h√¨nh'}")
        print(f"üìÅ Th∆∞ m·ª•c: {'‚úÖ OK' if status['directories'] else '‚ùå L·ªói'}")
        
        return status

# T·∫°o instance global
app_config = AppConfig()
